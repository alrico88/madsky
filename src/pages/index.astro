---
import MeasurementGridItem from "@components/MeasurementGridItem.astro";
import Layout from "@layouts/Layout.astro";
import { SNAPSHOTS_IN_A_WEEK } from "@helpers/time";
import db from "@helpers/db";

const page = Astro.url.searchParams.get("page") ?? 0;

const data = await db.query.skyMeasurement.findMany({
  columns: {
    id: true,
    createdAt: true,
    averageColor: true,
    image: true,
  },
  orderBy: (measurement, {desc}) => desc(measurement.createdAt),
  limit: SNAPSHOTS_IN_A_WEEK,
  offset: SNAPSHOTS_IN_A_WEEK * Number(page),
});
---

<Layout
  title="MADSKY"
  description="Observa el cielo de Madrid y sus colores a lo largo de los dÃ­as"
  keywords="Madrid,cielo,color,colores"
>
  <div class="row row-cols-2 row-cols-md-4 row-cols-lg-5 g-0">
    {
      data.map((d) => {
        return (
          <div class="col">
            <MeasurementGridItem
              id={d.id}
              color={d.averageColor}
              date={d.createdAt}
              image={d.image}
            />
          </div>
        );
      })
    }
  </div>
  <div class="container-fluid">
    <div class="row">
      <div class="col text-center">
        <a class="btn btn-link w-100 py-3" href={`/?page=${Number(page) + 1}`}
          >Load previous</a
        >
      </div>
    </div>
  </div>
</Layout>
